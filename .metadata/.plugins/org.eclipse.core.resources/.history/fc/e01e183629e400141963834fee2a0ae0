package com.moe.arpg;

import com.badlogic.ashley.core.Engine;
import com.badlogic.ashley.core.Entity;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.utils.Array;

public class GameManager {
	Engine engine;
	GdxGame gdx;
	Input input;
	
	
	Array<Long> IDs;
	Entity ent;
	Entity box;
	Entity trash;
	Entity bg;
	
	RenderSystem renderSys;
	SynchSystem synchSys;
	ControlSystem controlSys;
	
	Array<Entity> entities = new Array<Entity>();
	
	public GameManager(GdxGame gdx) {
		this.gdx = gdx;
		engine = new Engine();

		synchSys = new SynchSystem(gdx.world, gdx.camera);
		controlSys = new ControlSystem();
		renderSys = new RenderSystem(gdx.batch);
		
		engine.addSystem(synchSys);
		engine.addSystem(controlSys);
		engine.addSystem(renderSys);
		
		
		IDs = new Array<Long>();
		
		
		trash = new Entity();
		trash.add(new RenderComponent(new Texture("bg.png"), gdx.batch));
		trash.add(new BodyComponent(gdx.world, Mappers.rm.get(trash), 110, 11));
		
		box = new Entity();
		box.add(new RenderComponent(new Texture("box.png"), gdx.batch));
		box.add(new BodyComponent(gdx.world, Mappers.rm.get(box)));
		box.add(new ControllerComponent());
		
		ent = new Entity();
		ent.add(new RenderComponent(new Texture("small_green.png"), gdx.batch));
		ent.add(new BodyComponent(gdx.world, Mappers.rm.get(ent), 60, 40, 0.6f));
		ent.add(new ControllerComponent());
		ent.add(new StatsComponent());
		IDs.add(ent.getId()); 
		
		bg = new Entity();
		bg.add(new RenderComponent(new Texture("bg.png"), gdx.batch));
		
		
		synchSys.addEntity(ent);
		controlSys.addEntity(ent);
		renderSys.addEntity(ent);
		
		synchSys.addEntity(box);
		controlSys.addEntity(box);
		renderSys.addEntity(box);
		
		synchSys.addEntity(trash);
		controlSys.addEntity(trash);
		renderSys.addEntity(trash);
		
		
		
		input = new Input(ent);
		
	}
	
	
	
	public void update() {
		
		gdx.camera.translate(Mappers.rm.get(ent).sprite.getX() - gdx.camera.position.x + 40, Mappers.rm.get(ent).sprite.getY() - gdx.camera.position.y + 40);
		gdx.camera.update();
		
		input.update(Gdx.graphics.getDeltaTime());
		engine.update(Gdx.graphics.getDeltaTime());
		
		
		//SynchSystem.debugRenderer.render(gdx.world, gdx.camera.combined);
		
		
	}
}
