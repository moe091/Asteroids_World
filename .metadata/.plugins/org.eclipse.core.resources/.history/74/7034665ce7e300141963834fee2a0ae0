package com.moe.arpg;

import com.badlogic.ashley.core.Entity;
import com.badlogic.ashley.core.EntitySystem;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.Box2DDebugRenderer;
import com.badlogic.gdx.physics.box2d.World;
import com.badlogic.gdx.utils.Array;

public class PhysicsSystem extends EntitySystem {
	World world;
	OrthographicCamera camera;
	Box2DDebugRenderer debugRenderer = new Box2DDebugRenderer();
	Array<Body> bodies = new Array<Body>();
	private Array<Entity> ents = new Array<Entity>();
	private BodyComponent cBody;
	
	public PhysicsSystem(World world, OrthographicCamera camera) {
		this.world = world;
		this.camera = camera;
	}
	
	public void addEntity(Entity ent) {
		ents.add(ent);
	}
	
	public void update(float delta) {
		world.step(1/60f, 6, 2);
			
		//debugRenderer.render(world, camera.combined);

		for (Entity e : ents) {
			Mappers.pm.get(e).x = Mappers.bm.get(e).body.getPosition().x;
			Mappers.pm.get(e).y = Mappers.bm.get(e).body.getPosition().y;
			Mappers.pm.get(e).angle = Mappers.bm.get(e).body.getAngle();
			
			System.out.println(Mappers.bm.get(e).body.getAngle());
			Mappers.bm.get(e).body.applyForce(11100, 220, 2, 37, false);
			
		}
		
		world.getBodies(bodies);
	}

}
