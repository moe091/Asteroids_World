package com.moe.arpg;

import com.badlogic.ashley.core.Component;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.BodyDef;
import com.badlogic.gdx.physics.box2d.Fixture;
import com.badlogic.gdx.physics.box2d.FixtureDef;
import com.badlogic.gdx.physics.box2d.BodyDef.BodyType;
import com.badlogic.gdx.physics.box2d.PolygonShape;
import com.badlogic.gdx.physics.box2d.World;

public class BodyComponent extends Component {

	Body body;
	
	
	
	
	
	public BodyComponent(World world, RenderComponent render) {
		BodyDef bodyDef = new BodyDef();
		bodyDef.type = BodyType.DynamicBody;
		bodyDef.position.set(39, 39);
		
		body = world.createBody(bodyDef);
		
		PolygonShape shape = new PolygonShape();
		shape.setAsBox(render.sprite.getWidth() / 20, render.sprite.getHeight() / 20);
		
		FixtureDef fixDef = new FixtureDef();
		fixDef.shape = shape;
		fixDef.density = 0.1f;
		fixDef.friction = 0.1f;
		fixDef.restitution = 0.1f;
		
		Fixture fixture = body.createFixture(fixDef);
		
		shape.dispose();
		
		
	}
	// We set our body to dynamic, for something like ground which doesn't move we would set it to StaticBody
	/*bodyDef.type = BodyType.DynamicBody;
	// Set our body's starting position in the world
	bodyDef.position.set(100, 300);

	// Create our body in the world using our body definition
	Body body = world.createBody(bodyDef);

	// Create a circle shape and set its radius to 6
	CircleShape circle = new CircleShape();
	circle.setRadius(6f);

	// Create a fixture definition to apply our shape to
	FixtureDef fixtureDef = new FixtureDef();
	fixtureDef.shape = circle;
	fixtureDef.density = 0.5f; 
	fixtureDef.friction = 0.4f;
	fixtureDef.restitution = 0.6f; // Make it bounce a little bit

	// Create our fixture and attach it to the body
	Fixture fixture = body.createFixture(fixtureDef);

	// Remember to dispose of any shapes after you're done with them!
	// BodyDef and FixtureDef don't need disposing, but shapes do.
	circle.dispose();
	*/
}
